package com.lyb.ucenter.util;

import com.lyb.ucenter.entity.Member;
import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import org.springframework.util.StringUtils;

import java.util.Date;


/**
 * @author liuyoubin
 * @since 2020/1/19 - 21:26
 * JWT工具类
 */
public class JWTUtils {

    public static final String SUBJECT = "";

    /**
     * 秘钥
     */
    public static final String SECRET_KEY = "d98c5df1-39c1-40a3-80ea-3133e269b312";

    /**
     * 过期时间 30分钟
     */
    public  static final long EXPIRE_TIME = 1000*60*30;

    /**
     * 生成Member的JWT
     * @param member Member对象
     * @return JWt(如果生成签名出错则返回null)
     */
    public static String geneJsonWebToken(Member member){

        //判断Member信息是否合法且完整
        if(member == null || StringUtils.isEmpty(member.getId())
                ||StringUtils.isEmpty(member.getNickname())
                ||StringUtils.isEmpty(member.getAvatar())
                ||StringUtils.isEmpty(member.getOpenid())){
            return null;
        }


        return Jwts.builder().setSubject(SUBJECT)
                            .claim("id",member.getId())
                            .claim("nickName", member.getNickname())
                            .claim("avatar", member.getAvatar())
                            .setIssuedAt(new Date())
                            .setExpiration(new Date(System.currentTimeMillis()+EXPIRE_TIME))
                            .signWith(SignatureAlgorithm.HS256,SECRET_KEY).compact();
    }

    /**
     * 校验Token
     * @param token jwt
     * @return Claims信息
     */
    public static Claims checkJWT(String token){
        return Jwts.parser().setSigningKey(SECRET_KEY).parseClaimsJws(token).getBody();
    }
}
